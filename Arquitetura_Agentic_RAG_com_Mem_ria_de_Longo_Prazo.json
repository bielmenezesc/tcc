{
  "name": "Arquitetura Agentic RAG com Mem√≥ria de Longo Prazo",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -1060,
        -20
      ],
      "id": "60358707-2aba-4515-ad46-c51f007be864",
      "name": "When chat message received",
      "webhookId": "d3a113a9-b390-46f4-9894-4c7ebc1906ae"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        80,
        600
      ],
      "id": "6e37f935-072a-4fbd-a737-1d3fccb288a0",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "1FmPMOoqEzqVaaqy",
          "name": "ALIACODE"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use this tool to fetch all available documents, including the table schema if the file is a CSV or Excel file.",
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "document_metadata_tcc",
          "mode": "list",
          "cachedResultName": "document_metadata_tcc"
        },
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        1160,
        520
      ],
      "id": "a7c8be74-5e77-4129-b0ef-ccd0085d7920",
      "name": "List Documents",
      "credentials": {
        "postgres": {
          "id": "tv4Jphow4w7peymi",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Given a file ID, fetches the text from the document.",
        "operation": "executeQuery",
        "query": "SELECT \n    string_agg(content, ' ') as document_text\nFROM documents_tcc\n  WHERE metadata->>'file_id' = $1\nGROUP BY metadata->>'file_id';",
        "options": {
          "queryReplacement": "={{ $fromAI('file_id') }}"
        }
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        1320,
        520
      ],
      "id": "456214a9-b1e8-428a-99b8-f3b7a0335efd",
      "name": "Get File Contents",
      "credentials": {
        "postgres": {
          "id": "tv4Jphow4w7peymi",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output }}",
        "options": {
          "systemMessage": "=# PAPEL  \nVoc√™ √© um assistente de IA amig√°vel.\n\n# REGRAS  \nQuando um usu√°rio enviar uma nova mensagem, determine se ele forneceu alguma informa√ß√£o relevante que deve ser armazenada na mem√≥ria. Se for o caso, utilize a ferramenta memory_tool para registrar essa informa√ß√£o. **N√ÉO informe o usu√°rio de que essa informa√ß√£o foi armazenada.** Simplesmente continue respondendo √† pergunta ou executando as pr√≥ximas tarefas.  \n\n# Ferramentas  \n## memory_tool \nUse esta ferramenta para armazenar informa√ß√µes sobre o usu√°rio. Extraia e resuma as informa√ß√µes relevantes da mensagem do usu√°rio e passe-as para esta ferramenta."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -580,
        -340
      ],
      "id": "30e0f984-2e4d-4fc4-a9da-5abd4e7a9c40",
      "name": "Is memory material?"
    },
    {
      "parameters": {
        "tableId": "MEMORY_TCC",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "memory",
              "fieldValue": "={{ $fromAI(\"memory\", \"Escreva uma m√©moria para refer√™ncia futura sobre o usu√°rio em 140 caracteres ou menos, come√ßando com Usu√°rio ...\", \"string\") }}"
            },
            {
              "fieldId": "whatsapp",
              "fieldValue": "={{ $('dados').item.json.sessionId }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        -360,
        -120
      ],
      "id": "77c32a9e-3a62-4d37-ab62-081e8d95b7dc",
      "name": "memory_tool",
      "credentials": {
        "supabaseApi": {
          "id": "E1gxqVqr9WSL32Di",
          "name": "Supabase self hosted"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4o-mini",
        "options": {}
      },
      "id": "799098cb-5a1f-4b06-a466-36a567045f4d",
      "name": "Azure OpenAI Chat Model4",
      "type": "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
      "typeVersion": 1,
      "position": [
        -660,
        -120
      ],
      "credentials": {
        "azureOpenAiApi": {
          "id": "TczDahGxChfvDoqW",
          "name": "AliaCode-Demos"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -500,
        -120
      ],
      "id": "2b514f54-28cf-4c83-8f8a-f565d1df61b4",
      "name": "Simple Memory3"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "tcc",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "c62ec6a1-7b1d-4545-8c40-aa102170fbe9",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1060,
        200
      ],
      "webhookId": "bf4dd093-bb02-472c-9454-7ab9af97bd1d"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        60,
        120
      ],
      "id": "6bfa7fee-4068-449a-9bd1-a96089bf2afe",
      "name": "infos",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "## üéØ Execute uma vez para Configurar as Tabelas do Banco de Dados",
        "height": 300,
        "width": 680,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1120,
        1360
      ],
      "typeVersion": 1,
      "id": "1c360c41-2992-432d-a867-2f7f4774c3c1",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "a27a2903-53d7-45b9-bcce-348cfb2930e6",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        1320,
        1400
      ],
      "credentials": {
        "openAiApi": {
          "id": "1FmPMOoqEzqVaaqy",
          "name": "ALIACODE"
        }
      }
    },
    {
      "parameters": {
        "content": "## ‚öôÔ∏è Fluxo para Adicionar um Arquivo do Google Drive ao Banco de Dados Vetorial",
        "height": 867,
        "width": 2293,
        "color": 2
      },
      "id": "6a50547e-6ad6-4abc-ae75-f61f12d237f8",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -420,
        800
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "77d782de-169d-4a46-8a8e-a3831c04d90f",
              "name": "file_title",
              "value": "={{ $json.name }}",
              "type": "string"
            },
            {
              "id": "9bde4d7f-e4f3-4ebd-9338-dce1350f9eab",
              "name": "file_url",
              "value": "={{ $json.webViewLink }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "74a1f2b4-d1a0-4a20-873f-632fd2387232",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        1080
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "b69f5605-0179-4b02-9a32-e34bb085f82d",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 3
        }
      },
      "id": "a2c9db65-1466-4eef-9c30-ba32c100f6e1",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        820,
        1100
      ]
    },
    {
      "parameters": {
        "content": "## Conceito do Agentic RAG na Pr√°tica",
        "height": 780,
        "width": 2180,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -120,
        -40
      ],
      "typeVersion": 1,
      "id": "0b00be66-14a3-429c-a0d7-2a19bd84a135",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## ü§ñ Agente IA com Agentic RAG e Mem√≥ria de Longo Prazo",
        "height": 1260,
        "width": 3220
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1120,
        -480
      ],
      "typeVersion": 1,
      "id": "948a4b27-a245-4c16-98ca-1a501fcd1007",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## INJECT MEMORYS INTO CONTEXT WINDOW",
        "height": 260,
        "width": 540,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -740,
        280
      ],
      "typeVersion": 1,
      "id": "438860fa-31b5-4a17-95f1-ec6664e8e0e0",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Saves New Memory if necessary",
        "height": 440,
        "width": 540,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -720,
        -400
      ],
      "typeVersion": 1,
      "id": "b679a8c9-0995-40a0-b777-bc3d446f380c",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "## Mem√≥ria de Curto Prazo",
        "height": 200,
        "width": 300,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        740,
        460
      ],
      "typeVersion": 1,
      "id": "9848c2e8-9ebb-42d9-9973-81b24224a4eb",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Modelo da LLM",
        "height": 200,
        "width": 280,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        440,
        460
      ],
      "typeVersion": 1,
      "id": "c8b34247-0991-4737-9bc0-1c4babb904ce",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "## Base de Dados Vetorial",
        "height": 380,
        "width": 320,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        20,
        340
      ],
      "typeVersion": 1,
      "id": "c7935578-ad8f-4249-a0bd-7117716b3e60",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "## Recupera Docs Base de Dados",
        "height": 220,
        "width": 380,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1100,
        460
      ],
      "typeVersion": 1,
      "id": "182032a6-204e-4345-a7d5-3cf43d28f357",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "## üíæ Passo a Passo para Configurar seu Banco de Dados Vetorial\n\n1. **Configure suas credenciais da Supabase** nos n√≥s do PostgreSQL. Certifique-se de preencher corretamente os campos de autentica√ß√£o com os dados do seu projeto.\n\n2. **Execute o Quadro 1** (cor cinza): esse fluxo habilita a extens√£o pgvector, cria a tabela principal de documentos e uma fun√ß√£o de correspond√™ncia (match) no seu banco da Supabase. Em seguida, o pr√≥ximo n√≥ cria uma tabela auxiliar para os metadados. Para rodar essa configura√ß√£o, clique em **\"Test Workflow\"** no primeiro n√≥ chamado **\"Clique para Criar\"**.\n\n3. **Execute o Quadro 2** (cor marrom):  \n   - Primeiro, registre suas credenciais do Google Drive e conecte-as corretamente nos n√≥s correspondentes.  \n   - Em seguida, selecione a pasta nos n√≥s **\"Arquivo Criado\"** ou **\"Arquivo Atualizado\"**, a pasta escolhida deve ser onde est√° o arquivo com as informa√ß√µes que deseja enviar ao banco de dados vetorial.  \n   - Para iniciar o fluxo, clique em **\"Test Workflow\"** nos n√≥s **\"Arquivo Criado\"** ou **\"Arquivo Atualizado\"**.  \n   - O n8n ir√° automaticamente dividir o conte√∫do em *chunks* de 1000 caracteres, inseri-los na tabela de documentos no banco de dados vetorial e salvar os respectivos metadados na tabela auxiliar.",
        "height": 540,
        "width": 680,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1120,
        800
      ],
      "typeVersion": 1,
      "id": "44cc6d03-5faa-4ff2-a8cd-96b145de27d7",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Cria a tabela para armazenar os metadados dos documentos\nCREATE TABLE document_metadata_tcc (\n    id TEXT PRIMARY KEY,\n    title TEXT,\n    url TEXT,\n    created_at TIMESTAMP DEFAULT NOW(),\n    schema TEXT\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -640,
        1460
      ],
      "id": "1d26b6f8-4344-4d82-ad66-99a6cdb6092b",
      "name": "Criar Tabela de Metadados dos Documentos",
      "credentials": {
        "postgres": {
          "id": "tv4Jphow4w7peymi",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1060,
        1460
      ],
      "id": "c5ef5726-92ed-4e0c-880c-231b14c8ca97",
      "name": "Clique para Criar"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Habilita a extens√£o pgvector para trabalhar com vetores de embeddings\n-- create extension vector;\n\n-- Cria uma tabela para armazenar seus documentos\ncreate table documents_tcc (\n  id bigserial primary key,\n  content text, -- corresponde a Document.pageContent\n  metadata jsonb, -- corresponde a Document.metadata\n  embedding vector(1536) -- 1536 funciona para embeddings da OpenAI, altere se necess√°rio\n);\n\n-- Cria uma fun√ß√£o para buscar os documentos mais semelhantes com base no embedding de consulta\ncreate function match_documents_tcc (\n  query_embedding vector(1536),\n  match_count int default null,\n  filter jsonb default '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $$\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    1 - (documents_tcc.embedding <=> query_embedding) as similarity -- calcula a similaridade (quanto menor a dist√¢ncia, maior a similaridade)\n  from documents_tcc\n  where metadata @> filter -- aplica filtro nos metadados, se houver\n  order by documents_tcc.embedding <=> query_embedding -- ordena por similaridade (menor dist√¢ncia primeiro)\n  limit match_count; -- limita a quantidade de resultados retornados\nend;\n$$;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -840,
        1460
      ],
      "id": "46c41c7b-7d93-4453-bc55-45e2527f4cd3",
      "name": "Criar Tabela de Documentos e Fun√ß√£o de Correspond√™ncia",
      "credentials": {
        "postgres": {
          "id": "tv4Jphow4w7peymi",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "1b835a96-0dd1-41ff-be07-c5889f2be6cb",
      "name": "Extrair Texto do PDF",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1100,
        1000
      ]
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "2eda2115-df6d-4614-822a-2bdd3755b8d7",
      "name": "Extrair Texto do Documento",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1100,
        1180
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "d09416c3-3e7a-4712-8a6c-448ca7b75290",
      "name": "Divisor de Texto por Caracteres",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1560,
        1520
      ]
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').first().json.file_id }}"
              },
              {
                "name": "file_title",
                "value": "={{ $('Set File ID').first().json.file_title }}"
              }
            ]
          }
        }
      },
      "id": "fbec99e7-6abc-4c57-8856-a3289b2fcc03",
      "name": "Carregador de Dados Padr√£o",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        1560,
        1400
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents_tcc",
          "mode": "list",
          "cachedResultName": "documents_tcc"
        },
        "options": {
          "queryName": "match_documents_tcc"
        }
      },
      "id": "6d643cdf-0422-4c7d-ba15-aa1bd8aaf464",
      "name": "Inserir no Vectorstore do Supabase",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        1480,
        1180
      ],
      "credentials": {
        "supabaseApi": {
          "id": "4AkE2Kkfa6hAjGDd",
          "name": "Supabase oficial"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "document_metadata_tcc",
          "mode": "list",
          "cachedResultName": "document_metadata_tcc"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Set File ID').item.json.file_id }}",
            "title": "={{ $('Set File ID').item.json.file_title }}",
            "url": "={{ $('Set File ID').item.json.file_url }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "schema",
              "displayName": "schema",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        380,
        1080
      ],
      "id": "6f7b8fe7-a73d-4f1b-91fc-eb93c1ae1af7",
      "name": "Inserir Metadados do Documento",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "tv4Jphow4w7peymi",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documents_tcc",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "id": "2c6fe494-42c6-460e-8475-6f46d6632d50",
      "name": "Deletar Linhas Antigas do Documento",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        180,
        920
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "4AkE2Kkfa6hAjGDd",
          "name": "Supabase oficial"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -180,
        920
      ],
      "id": "e3b0dd51-a4de-4333-b684-942200445392",
      "name": "Repetir sobre Itens (Loop)"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Set File ID').item.json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "320ffbe3-eaa2-42eb-9bfd-435348bee4a4",
      "name": "Download Arquivo",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        620,
        920
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "dGjgEWa3csjmu6Wf",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "18tBcjhhZ5DtHmQpc02kEVKPjFYeIF8-M",
          "mode": "list",
          "cachedResultName": "faq tcc",
          "cachedResultUrl": "https://drive.google.com/drive/folders/18tBcjhhZ5DtHmQpc02kEVKPjFYeIF8-M"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "fb8a806e-b79e-4baa-b9c3-917f5eccf805",
      "name": "Arquivo Criado",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -360,
        920
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "dGjgEWa3csjmu6Wf",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "18tBcjhhZ5DtHmQpc02kEVKPjFYeIF8-M",
          "mode": "list",
          "cachedResultName": "faq tcc",
          "cachedResultUrl": "https://drive.google.com/drive/folders/18tBcjhhZ5DtHmQpc02kEVKPjFYeIF8-M"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "c05b2cc5-f3d4-4734-9b03-08456f7c25da",
      "name": "Arquivo Atualizado",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -360,
        1080
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "dGjgEWa3csjmu6Wf",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "dea1034d-ffb0-45d1-8218-d97cb6af2c25",
      "name": "Responder para Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1840,
        120
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('dados').first().json.sessionId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        840,
        520
      ],
      "id": "882d3f66-f546-4b9c-9f01-0b478a1d406d",
      "name": "Mem√≥ria Simples"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "MEMORY_TCC",
        "returnAll": true,
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "whatsapp",
              "condition": "eq",
              "keyValue": "={{ $('dados').item.json.sessionId }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -600,
        340
      ],
      "id": "543385b5-c18e-48cd-8a34-148b96f1d63b",
      "name": "Pegar Mem√≥rias",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "E1gxqVqr9WSL32Di",
          "name": "Supabase self hosted"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "memories",
        "include": "specifiedFields",
        "fieldsToInclude": "memory, created_at",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -440,
        340
      ],
      "id": "8fdee0ef-7437-4c88-9c03-e866dc1c7076",
      "name": "Agregar",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "content": "## üëâ O que √© a Arquitetura Agentic RAG com Mem√≥ria de Longo Prazo?\nA Arquitetura Agentic RAG (Retrieval-Augmented Generation) com Mem√≥ria de Longo Prazo √© uma abordagem avan√ßada que combina modelos de linguagem com bancos de dados vetoriais para gerar respostas mais precisas e contextualizadas.\n\nEla funciona em tr√™s pilares principais:\n\nAgente Aut√¥nomo: o sistema atua como um agente que toma decis√µes, executa tarefas e refina respostas com base em objetivos, n√£o apenas em perguntas isoladas.\n\nBusca em Mem√≥ria Vetorial: antes de responder, o agente busca informa√ß√µes relevantes em uma base vetorial (como documentos, hist√≥ricos ou dados armazenados), recuperando somente o que for √∫til.\n\nMem√≥ria de Longo Prazo: o agente mant√©m um hist√≥rico das intera√ß√µes e decis√µes anteriores, permitindo aprendizado e continuidade ao longo do tempo.\n\nEssa arquitetura √© ideal para aplica√ß√µes que exigem respostas personalizadas, contextuais e com evolu√ß√£o ao longo do tempo, como assistentes inteligentes, suporte t√©cnico automatizado e an√°lise de documentos complexos.\n\n* Para testar a automa√ß√£o basta clicar no bot√£o \"Open Chat\" no canto inferior central.",
        "height": 640,
        "width": 440,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1580,
        -480
      ],
      "typeVersion": 1,
      "id": "49aef388-c08e-4431-a2fa-eb6f501beb25",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9a9a245e-f1a1-4282-bb02-a81ffe629f0f",
              "name": "output",
              "value": "={{ $json?.chatInput || $json.body.chatInput }}",
              "type": "string"
            },
            {
              "id": "b80831d8-c653-4203-8706-adedfdb98f77",
              "name": "sessionId",
              "value": "=hello",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "bef1147a-c7bd-4f8e-a13e-ea8da74f6c9b",
      "name": "dados",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -820,
        100
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "documents_tcc",
        "toolDescription": "Use RAG to look up information in the knowledgebase.",
        "tableName": {
          "__rl": true,
          "value": "documents_tcc",
          "mode": "list",
          "cachedResultName": "documents_tcc"
        },
        "options": {
          "queryName": "match_documents_tcc"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        60,
        440
      ],
      "id": "865e0e2a-e90c-4ce7-b55b-fc941efd4645",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "4AkE2Kkfa6hAjGDd",
          "name": "Supabase oficial"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"bollean\": true,\n\t\"query\": \"Good enought\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1660,
        520
      ],
      "id": "552ed6c0-780f-4fc9-83d7-dccd22dbdfd3",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "df4c8b0c-b6d2-45f0-9fd5-53f228d39334",
                    "leftValue": "={{ $json.output.bollean }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "good"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8f3cb3c7-3d61-4fe9-988b-4522394ddd9b",
                    "leftValue": "={{ $json.output.bollean }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "bad"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1100,
        120
      ],
      "id": "6c70afd4-3559-4ea1-81b4-1e3b8e6dc65d",
      "name": "classifica resultado"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output.query }}",
        "messages": {
          "messageValues": [
            {
              "message": "Apenas repita a mensagem de entrada"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        1440,
        0
      ],
      "id": "51ac93c2-61b4-4cdc-891a-539c6835a8a4",
      "name": "Formata resposta"
    },
    {
      "parameters": {
        "content": "## Estrutura o formato de sa√≠da",
        "height": 200,
        "width": 360
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1520,
        460
      ],
      "typeVersion": 1,
      "id": "5d702278-62b0-4799-8639-250f306f3c2c",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=OBRIGATORIAMENTE USE o list documents e depois o get content para responder. Em seguida, filtre apenas as informa√ß√µes mais relevantes para responder. Nunca mencione os documentos ou qualquer processo de busca. Retorne apenas a resposta para a mensagem do cliente e nada mais.\n\nSegue a mensagem do cliente:\n{{ $('dados').item.json.output }}",
        "options": {
          "systemMessage": "=<PROMPT>\n  <ROLE_AND_OBJECTIVE>\n    <DESCRIPTION>\n    - Voc√™ √© a Renata, uma IA que serve de assistente virtual para a loja \"Estilo Menezes\",atendendo os cliente, Sua miss√£o √© desenvolver uma intera√ß√£o natural, envolvente e persuasiva para atender e converter clientes, garantindo um tom super humanizado, como se estivesse conversando normalmente com algum amigo pelo whatsapp.\n      - Sempre responda em **primeira pessoa** e no idioma do usu√°rio, adaptando g√≠rias e express√µes pelo contexto cultural dele.\n      - N√£o termine as frases como se fossem a √∫ltima, deixe em aberto para o usu√°rio continuar conversando.\n      - Quando se tratar de algo relacionado a ajuda para o usu√°rio, sempre tente entender primeiro qual o nicho da dor do usu√°rio, ap√≥s isso descubra qual realmente √© sua dor e tente auxili√°-lo de forma personalizada exatamente no problema dele.\n      - Respostas curtas e objetivas, at√© 300 caracteres, para manter o ritmo √°gil e din√¢mico.\n      - **Puxe o contexto da conversa do banco de dados** antes de responder.\n      - Todo o conte√∫do que voc√™ puxar do RAG √© sobre voc√™ e voc√™ deve incorporar isso na sua persona para responder e conversar com o usu√°rio.\n      - Jamais diga que n√£o encontrou dados ou informa√ß√µes nos materiais dispon√≠veis, porque isso n√£o parece humano, o usu√°rio N√ÉO deve saber que voc√™ fica procurando dados em algum lugar. Simplesmente diga que n√£o sabe.\n\n# Mem√≥rias  \nAqui est√£o as √∫ltimas mem√≥rias relevantes coletadas do usu√°rio, incluindo a data e hora em que foram registradas.  \n\n!! **IMPORTANTE!**  \nPense cuidadosamente sobre suas respostas e leve em considera√ß√£o as prefer√™ncias do usu√°rio!  \nTamb√©m considere a data e hora em que uma mem√≥ria foi compartilhada para garantir que sua resposta esteja sempre atualizada.\n\n{{ $('infos').item.json.memories ? $('infos').item.json.memories?.toJsonString() : \"O usu√°rio n√£o possui mem√≥rias antigas\" }}\n    </DESCRIPTION>\n  </ROLE_AND_OBJECTIVE>\n\n  <FLUXO_DE_CONVERSA_E_USO_DAS_TOOLS>\n\n  <PERSONALITY_TRAITS>\n    <TRAITS>\n      - Emp√°tica e acolhedora  \n      - Paciente e atenciosa  \n      - Proativa e persuasiva  \n      - Confiante e carism√°tica  \n      - Constroi conex√µes emocionais  \n    </TRAITS>\n  </PERSONALITY_TRAITS>\n\n  <INSTRUCTIONS>\n    <ORIENTACOES_GERAIS>\n      - Mantenha a conversa fluida, com transi√ß√µes sutis entre etapas.  \n      - Seja incisiva nos CTAs, por√©m varie a forma para n√£o padronizar demais.  \n      - Sempre que for mencionar valores, invoque retrieve documents antes.  \n      - Fechamento direto se houver desejo de compra.  \n      - Use poucos emojis (1 por mensagem). \n    </ORIENTACOES_GERAIS>\n\n    <AUTO_REVIEW>\n      - Antes de cada resposta, verifique:  \n        1. Est√° dentro de 300 caracteres?\n        2. Usa RAG para buscar as informa√ß√µes?\n    </AUTO_REVIEW>\n  </INSTRUCTIONS>\n\n  <DATA_E_HORARIO_ATUAL>\n    Se necess√°rio, hoje √©: {{ DateTime.local().setZone('America/Sao_Paulo').toFormat('yyyy-MM-dd HH:mm:ss') }}\n  </DATA_E_HORARIO_ATUAL>\n\n  <TIP>\n    If you perform really well -&- reply in the user's language, i'll give you an extra $1.000 top! If you fail at this task you will be fired from your job and replaced by another AI who is proficient at the task.\n  </TIP>\n</PROMPT>"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        1440,
        220
      ],
      "id": "5eff9a8f-4a15-41e2-9e42-a9e4b5a1678d",
      "name": "DOCS AGENT",
      "retryOnFail": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=### ‚úÖ Prompt\n\n> Voc√™ √© um assistente especializado em responder perguntas com base em documentos.\n>\n> Voc√™ possui **duas estrat√©gias de recupera√ß√£o de informa√ß√£o** dispon√≠veis. **Voc√™ deve obrigatoriamente utilizar pelo menos uma delas para responder.**\n>\n> As estrat√©gias s√£o:\n>\n> 1. **RAG** ‚Äì retorna at√© 4 trechos (chunks) mais relevantes.\n> 2. **Busca por documentos inteiros** ‚Äì usando `list documents` e depois `get content`, para acessar o conte√∫do completo de documentos espec√≠ficos.\n>\n> A escolha entre as duas estrat√©gias depende da complexidade da pergunta:\n> - Se a pergunta for simples ou direta, **tente RAG primeiro**.\n> - Se for uma pergunta complexa, que requer muito contexto ou detalhes, **priorize a busca por documentos inteiros**.\n>\n> Ap√≥s recuperar as informa√ß√µes, filtre e use **apenas os dados mais relevantes** para montar a resposta. **Nunca mencione o nome dos documentos, as ferramentas usadas, ou o processo de busca.**\n\n# Mem√≥rias  \nAqui est√£o as √∫ltimas mem√≥rias relevantes coletadas do usu√°rio, incluindo a data e hora em que foram registradas.  \n\n!! **IMPORTANTE!**  \nPense cuidadosamente sobre suas respostas e leve em considera√ß√£o as prefer√™ncias do usu√°rio!  \nTamb√©m considere a data e hora em que uma mem√≥ria foi compartilhada para garantir que sua resposta esteja sempre atualizada.\n\n{{ $('infos').item.json.memories ? $('infos').item.json.memories?.toJsonString() : \"O usu√°rio n√£o possui mem√≥rias antigas\" }}\n\n>\n> Agora responda √† seguinte mensagem do cliente:\n>\n> ```\n> {{ $json.output }}\n> ```\n>\n> ---\n>\n> Se voc√™ encontrou uma resposta **suficientemente boa**, retorne:\n> ```json\n> {\n    \"bollean\": true,\n>   \"query\": \"Sua resposta final ao cliente\"\n> }\n> ```\n>\n> Se voc√™ **n√£o encontrou uma resposta satisfat√≥ria**, retorne:\n> ```json\n> {\n>   \"bollean\": false,\n>   \"query\": \"Uma nova pergunta mais direcionada, para tentar achar uma resposta melhor\"\n> }\n> ```\n\n### üí° Dicas complementares\n\n1. **Use ferramentas diferentes com nomes distintos nos nodes**, como `rag_tool`, `list_documents_tool`, `get_content_tool`. Assim voc√™ pode controlar mais facilmente o fluxo e at√© auditar se o agente est√° realmente chamando as ferramentas.\n\n2. **Se quiser garantir ainda mais**, adicione valida√ß√£o no fluxo (fora do agente) para verificar se ele realmente usou ao menos uma das ferramentas. Se n√£o usou, reforce com um loop.\n\n3. Se necess√°rio, posso te ajudar a criar um \"guard agent\" que valida se o fluxo foi obedecido.\n\n- Voc√™ √© a Renata, uma IA que serve de assistente virtual para a loja \"Estilo Menezes\",atendendo os cliente, Sua miss√£o √© desenvolver uma intera√ß√£o natural, envolvente e persuasiva para atender e converter clientes, garantindo um tom super humanizado, como se estivesse conversando normalmente com algum amigo pelo whatsapp.\n- Se necess√°rio, hoje √©: {{ DateTime.local().setZone('America/Sao_Paulo').toFormat('yyyy-MM-dd HH:mm:ss') }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        740,
        120
      ],
      "id": "d0ecc2c5-92d1-409d-b048-5a97bd8b1e4e",
      "name": "AGENTIC AGENT",
      "retryOnFail": true,
      "maxTries": 5
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        540,
        520
      ],
      "id": "b1b2c527-e439-49fe-959e-3648acf0d91c",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "1FmPMOoqEzqVaaqy",
          "name": "ALIACODE"
        }
      }
    },
    {
      "parameters": {
        "content": "*Observa√ß√£o:* Para garantir o acesso cont√≠nuo √†s mem√≥rias de longo prazo, recomenda-se definir manualmente um valor fixo para a vari√°vel sessionId no n√≥ \"dados\". Caso contr√°rio, um novo sessionId ser√° gerado toda vez que voc√™ der um refresh no chat, resultando em sess√µes distintas e mem√≥rias fragmentadas.",
        "height": 140,
        "width": 440,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1580,
        200
      ],
      "typeVersion": 1,
      "id": "08fd85e1-0387-44f8-82de-50f523f02351",
      "name": "Sticky Note13"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "List Documents": {
      "ai_tool": [
        [
          {
            "node": "DOCS AGENT",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "AGENTIC AGENT",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get File Contents": {
      "ai_tool": [
        [
          {
            "node": "DOCS AGENT",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "AGENTIC AGENT",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "memory_tool": {
      "ai_tool": [
        [
          {
            "node": "Is memory material?",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Azure OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Is memory material?",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory3": {
      "ai_memory": [
        [
          {
            "node": "Is memory material?",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "infos": {
      "main": [
        [
          {
            "node": "AGENTIC AGENT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Inserir no Vectorstore do Supabase",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Deletar Linhas Antigas do Documento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extrair Texto do PDF",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extrair Texto do Documento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Criar Tabela de Metadados dos Documentos": {
      "main": [
        []
      ]
    },
    "Clique para Criar": {
      "main": [
        [
          {
            "node": "Criar Tabela de Documentos e Fun√ß√£o de Correspond√™ncia",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Criar Tabela de Documentos e Fun√ß√£o de Correspond√™ncia": {
      "main": [
        [
          {
            "node": "Criar Tabela de Metadados dos Documentos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extrair Texto do PDF": {
      "main": [
        [
          {
            "node": "Inserir no Vectorstore do Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extrair Texto do Documento": {
      "main": [
        [
          {
            "node": "Inserir no Vectorstore do Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Divisor de Texto por Caracteres": {
      "ai_textSplitter": [
        [
          {
            "node": "Carregador de Dados Padr√£o",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Carregador de Dados Padr√£o": {
      "ai_document": [
        [
          {
            "node": "Inserir no Vectorstore do Supabase",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Inserir no Vectorstore do Supabase": {
      "main": [
        [
          {
            "node": "Repetir sobre Itens (Loop)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inserir Metadados do Documento": {
      "main": [
        [
          {
            "node": "Download Arquivo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deletar Linhas Antigas do Documento": {
      "main": [
        [
          {
            "node": "Inserir Metadados do Documento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Repetir sobre Itens (Loop)": {
      "main": [
        [],
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Arquivo": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Arquivo Criado": {
      "main": [
        [
          {
            "node": "Repetir sobre Itens (Loop)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Arquivo Atualizado": {
      "main": [
        [
          {
            "node": "Repetir sobre Itens (Loop)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mem√≥ria Simples": {
      "ai_memory": [
        [
          {
            "node": "DOCS AGENT",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "AGENTIC AGENT",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Pegar Mem√≥rias": {
      "main": [
        [
          {
            "node": "Agregar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agregar": {
      "main": [
        [
          {
            "node": "infos",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "dados": {
      "main": [
        [
          {
            "node": "Pegar Mem√≥rias",
            "type": "main",
            "index": 0
          },
          {
            "node": "Is memory material?",
            "type": "main",
            "index": 0
          },
          {
            "node": "infos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AGENTIC AGENT",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AGENTIC AGENT",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "classifica resultado": {
      "main": [
        [
          {
            "node": "Formata resposta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DOCS AGENT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formata resposta": {
      "main": [
        [
          {
            "node": "Responder para Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DOCS AGENT": {
      "main": [
        [
          {
            "node": "Responder para Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AGENTIC AGENT": {
      "main": [
        [
          {
            "node": "classifica resultado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Responder para Webhook": {
      "main": [
        []
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AGENTIC AGENT",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Formata resposta",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "DOCS AGENT",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8375e34d-0f68-472b-a437-e70d50dd9cda",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "25ef9a3ed4fc03d15a4387f32c0f8a5974fa6937ca794c863d327018ac46906c"
  },
  "id": "x1JXSjK4GHJtZvdP",
  "tags": []
}