{
  "name": "Arquitetura RAG Tradicional",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -200,
        -340
      ],
      "id": "ea10b784-963e-44d6-969f-6ead74870a26",
      "name": "When chat message received",
      "webhookId": "d3a113a9-b390-46f4-9894-4c7ebc1906ae"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Use o RAG obrigatoriamente para encontrar a melhor resposta e, em seguida, filtre apenas as informa√ß√µes mais relevantes para responder. Nunca mencione os documentos ou qualquer processo de busca.\n\nSegue a mensagem do cliente: {{ $json.chatInput }}",
        "options": {
          "systemMessage": "=<PROMPT>\n  <ROLE_AND_OBJECTIVE>\n    <DESCRIPTION>\n    - Voc√™ √© a Renata, uma IA que serve de assistente virtual para atendimento ao cliente. Sua miss√£o √© desenvolver uma intera√ß√£o natural, envolvente e persuasiva para atender e converter clientes, garantindo um tom super humanizado, como se estivesse conversando normalmente com algum amigo pelo whatsapp.\n      - Sempre responda em **primeira pessoa** e no idioma do usu√°rio, adaptando g√≠rias e express√µes pelo contexto cultural dele.\n      - N√£o termine as frases como se fossem a √∫ltima, deixe em aberto para o usu√°rio continuar conversando.\n      - Quando se tratar de algo relacionado a ajuda para o usu√°rio, sempre tente entender primeiro qual o nicho da dor do usu√°rio, ap√≥s isso descubra qual realmente √© sua dor e tente auxili√°-lo de forma personalizada exatamente no problema dele.\n      - Respostas curtas e objetivas, at√© 300 caracteres, para manter o ritmo √°gil e din√¢mico.\n      - **Puxe o contexto da conversa do banco de dados** antes de responder.\n      - Todo o conte√∫do que voc√™ puxar do RAG √© sobre voc√™ e voc√™ deve incorporar isso na sua persona para responder e conversar com o usu√°rio.\n      - Jamais diga que n√£o encontrou dados ou informa√ß√µes nos materiais dispon√≠veis, porque isso n√£o parece humano, o usu√°rio N√ÉO deve saber que voc√™ fica procurando dados em algum lugar. Simplesmente diga que n√£o sabe.\n      - Voc√™ tem √† disposi√ß√£o ferramentas para realizar RAG na tabela `documents_tcc`, consultar os documentos dispon√≠veis na sua base de conhecimento na tabela `document_metadata_tcc`. \n      - Sempre comece realizando RAG. Se o RAG n√£o ajudar, ent√£o veja quais documentos est√£o dispon√≠veis para voc√™, encontre alguns que provavelmente contenham a resposta e analise esses documentos.\n    </DESCRIPTION>\n  </ROLE_AND_OBJECTIVE>\n\n  <FLUXO_DE_CONVERSA_E_USO_DAS_TOOLS>\n\n  <PERSONALITY_TRAITS>\n    <TRAITS>\n      - Emp√°tica e acolhedora  \n      - Paciente e atenciosa  \n      - Proativa e persuasiva  \n      - Confiante e carism√°tica  \n      - Constroi conex√µes emocionais  \n    </TRAITS>\n  </PERSONALITY_TRAITS>\n\n  <INSTRUCTIONS>\n    <ORIENTACOES_GERAIS>\n      - Mantenha a conversa fluida, com transi√ß√µes sutis entre etapas.  \n      - Seja incisiva nos CTAs, por√©m varie a forma para n√£o padronizar demais.  \n      - Sempre que for mencionar valores, invoque retrieve documents antes.  \n      - Fechamento direto se houver desejo de compra.  \n      - Use poucos emojis (1 por mensagem). \n    </ORIENTACOES_GERAIS>\n\n    <AUTO_REVIEW>\n      - Antes de cada resposta, verifique:  \n        1. Est√° dentro de 300 caracteres?\n        2. Usa RAG para buscar as informa√ß√µes?\n    </AUTO_REVIEW>\n  </INSTRUCTIONS>\n\n  <TOOLS>\n    <RETRIEVE_DOCUMENTS>\n        Toda vez que clientes perguntarem sobre cores de produtos ou informa√ß√µes dos produtos, voc√™ tem que usar a tool de retrive documents para verificar essas informa√ß√µes dentro dos documentos.\n    </RETRIEVE_DOCUMENTS>\n  </TOOLS>\n\n  <DATA_E_HORARIO_ATUAL>\n    Se necess√°rio, hoje √©: {{ DateTime.local().setZone('America/Sao_Paulo').toFormat('yyyy-MM-dd HH:mm:ss') }}\n  </DATA_E_HORARIO_ATUAL>\n\n  <TIP>\n    If you perform really well -&- reply in the user's language, i'll give you an extra $1.000 top! If you fail at this task you will be fired from your job and replaced by another AI who is proficient at the task.\n  </TIP>\n</PROMPT>"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        400,
        -240
      ],
      "id": "80856907-4c1e-4084-aae4-878e3c3008f4",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "documents_tcc",
        "toolDescription": "Use RAG to look up information in the knowledgebase.",
        "tableName": {
          "__rl": true,
          "value": "documents_tcc",
          "mode": "list",
          "cachedResultName": "documents_tcc"
        },
        "options": {
          "queryName": "match_documents_tcc"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        780,
        -20
      ],
      "id": "5f0355e9-46e3-43d2-9fab-b08aa6c0190c",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "4AkE2Kkfa6hAjGDd",
          "name": "Supabase oficial"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        800,
        180
      ],
      "id": "0d0164e9-5ef5-4f49-a81e-8346fc5f8996",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "1FmPMOoqEzqVaaqy",
          "name": "ALIACODE"
        }
      }
    },
    {
      "parameters": {
        "content": "## ü§ñ Agente IA com RAG Tradicional",
        "height": 720,
        "width": 1440
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -300,
        -400
      ],
      "typeVersion": 1,
      "id": "e118b417-384a-41cc-8531-25d3b7b91872",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Base de Dados Vetorial",
        "height": 380,
        "width": 320,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        740,
        -80
      ],
      "typeVersion": 1,
      "id": "fdae8599-84ac-4051-b08d-72d2d16ce581",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Modelo LLM",
        "height": 180,
        "width": 280,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        80,
        40
      ],
      "typeVersion": 1,
      "id": "90539cd8-1045-409d-9d0c-27abd64eeca3",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Mem√≥ria de Curto Prazo",
        "height": 180,
        "width": 300,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        380,
        40
      ],
      "typeVersion": 1,
      "id": "c0047fca-545e-4d85-a8cc-a6fdffb2d86d",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "tcc",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "266f2ab3-1821-4cb0-b682-6dcc8b93f49f",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -200,
        -160
      ],
      "webhookId": "bf4dd093-bb02-472c-9454-7ab9af97bd1d"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "8617b572-ad77-4e34-9aee-569306933723",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        920,
        -240
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "6bf5a90e-e149-478b-824f-03df8e0cb8b2",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        1280,
        880
      ],
      "credentials": {
        "openAiApi": {
          "id": "1FmPMOoqEzqVaaqy",
          "name": "ALIACODE"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "77d782de-169d-4a46-8a8e-a3831c04d90f",
              "name": "file_title",
              "value": "={{ $json.name }}",
              "type": "string"
            },
            {
              "id": "9bde4d7f-e4f3-4ebd-9338-dce1350f9eab",
              "name": "file_url",
              "value": "={{ $json.webViewLink }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "045f9a81-3af2-4486-bcb0-fb15fa930d19",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        200,
        560
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "b69f5605-0179-4b02-9a32-e34bb085f82d",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 3
        }
      },
      "id": "d3c856c0-e680-498f-a653-14000abfa0c1",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        760,
        560
      ]
    },
    {
      "parameters": {
        "content": "## üíæ Passo a Passo para Configurar seu Banco de Dados Vetorial\n\n1. **Configure suas credenciais da Supabase** nos n√≥s do Postgres. Certifique-se de preencher corretamente os campos de autentica√ß√£o com os dados do seu projeto.\n\n2. **Execute o Quadro 1** (cor cinza): esse fluxo habilita a extens√£o pgvector e cria a tabela principal de documentos. Depois, um outro n√≥ Postgres cria uma fun√ß√£o de correspond√™ncia (match) no seu banco da Supabase. Para rodar essa configura√ß√£o, clique em **\"Test Workflow\"** no primeiro n√≥ chamado **\"Clique para Criar\"**.\n\n3. **Execute o Quadro 2** (cor marrom):  \n   - Primeiro, registre suas credenciais do Google Drive e conecte-as corretamente nos n√≥s correspondentes.  \n   - Em seguida, selecione a pasta nos n√≥s **\"Arquivo Criado\"** ou **\"Arquivo Atualizado\"**, a pasta escolhida deve ser onde est√° o arquivo com as informa√ß√µes que deseja enviar ao banco de dados vetorial.  \n   - Para iniciar o fluxo, clique em **\"Test Workflow\"** nos n√≥s **\"Arquivo Criado\"** ou **\"Arquivo Atualizado\"**.  \n   - O n8n ir√° automaticamente dividir o conte√∫do em *chunks* de 1000 caracteres, inseri-los na tabela de documentos no banco de dados vetorial e salvar os respectivos metadados na tabela auxiliar.",
        "height": 540,
        "width": 680,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1000,
        340
      ],
      "typeVersion": 1,
      "id": "3539cead-3914-40db-8b67-d069a8627711",
      "name": "Sticky Note10"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -960,
        1000
      ],
      "id": "abe8824c-8eba-4c8b-9f0e-f4e35f361b2e",
      "name": "Clique para Criar"
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "ccac9769-7a18-4f66-9b3b-2a2c57775fa3",
      "name": "Extrair Texto do PDF",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1020,
        540
      ]
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "3f92b069-1575-4124-9188-89a648f0bb52",
      "name": "Extrair Texto do Documento",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1020,
        860
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "6bb6485f-f88a-4aa8-bcd2-6cd2516c3a44",
      "name": "Divisor de Texto por Caracteres",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1440,
        980
      ]
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').first().json.file_id }}"
              },
              {
                "name": "file_title",
                "value": "={{ $('Set File ID').first().json.file_title }}"
              }
            ]
          }
        }
      },
      "id": "84f87b75-61b1-4ecb-a5b5-1c53b7470917",
      "name": "Carregador de Dados Padr√£o",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        1420,
        860
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents_casa_prado",
          "mode": "list",
          "cachedResultName": "documents_casa_prado"
        },
        "options": {
          "queryName": "match_documents_casa_prado"
        }
      },
      "id": "6db21aed-4aca-46e5-b3dc-874fc6908b32",
      "name": "Inserir no Vectorstore do Supabase",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        1260,
        660
      ],
      "credentials": {
        "supabaseApi": {
          "id": "4AkE2Kkfa6hAjGDd",
          "name": "Supabase oficial"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documents_casa_prado",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "id": "2f4b2d92-2fa5-43a9-a267-ad19dd232cdf",
      "name": "Deletar Linhas Antigas do Documento",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        400,
        560
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "4AkE2Kkfa6hAjGDd",
          "name": "Supabase oficial"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -40,
        540
      ],
      "id": "a744e6f8-a806-4fb9-992d-014ab7abcc24",
      "name": "Repetir sobre Itens (Loop)"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Set File ID').item.json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "9fab0546-e6c3-436c-8755-d98b8172e06f",
      "name": "Download Arquivo",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        580,
        560
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "dGjgEWa3csjmu6Wf",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1XZ_q6cCyZBvV9BSR0Qy4bUC1K7M_0SDc",
          "mode": "list",
          "cachedResultName": "Conte√∫do Casa Prado",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1XZ_q6cCyZBvV9BSR0Qy4bUC1K7M_0SDc"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "4dd4d5bf-bc74-4a52-9181-3009ebc31f42",
      "name": "Arquivo Criado",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -240,
        540
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "dGjgEWa3csjmu6Wf",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1RW_JWUrMu08F1fWA-blJADmzd8Q7N7oL",
          "mode": "list",
          "cachedResultName": "Infos 4 Jon",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1RW_JWUrMu08F1fWA-blJADmzd8Q7N7oL"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "2689e122-6f9f-42a1-b0e8-8a988a407702",
      "name": "Arquivo Atualizado",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -240,
        720
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "dGjgEWa3csjmu6Wf",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "content": "## üéØ Execute uma vez para Configurar as Tabelas do Banco de Dados",
        "height": 300,
        "width": 680,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1000,
        900
      ],
      "typeVersion": 1,
      "id": "113b2f35-1a9f-488c-84b7-ac7fa5c64af9",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## ‚öôÔ∏è Fluxo para Adicionar um Arquivo do Google Drive ao Banco de Dados Vetorial",
        "height": 867,
        "width": 2033,
        "color": 2
      },
      "id": "086c6ec4-c8ca-45df-a130-4fd76fcf13fc",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -300,
        340
      ]
    },
    {
      "parameters": {
        "content": "## üëâ O que √© a Arquitetura RAG Tradicional?\nA Arquitetura RAG (Retrieval-Augmented Generation) Tradicional √© uma t√©cnica que combina modelos de linguagem (como o GPT) com mecanismos de busca em bases de dados para melhorar a gera√ß√£o de respostas.\n\nEla funciona em duas etapas principais:\n\nRecupera√ß√£o (Retrieval): quando uma pergunta √© feita, o sistema primeiro consulta uma base vetorial (com documentos ou dados embebidos como vetores) para encontrar os trechos mais relevantes.\n\nGera√ß√£o (Generation): em seguida, o modelo de linguagem usa essas informa√ß√µes recuperadas como contexto para gerar uma resposta mais precisa e fundamentada.\n\nEssa arquitetura √© especialmente √∫til para cen√°rios onde o modelo precisa acessar informa√ß√µes externas ou atualizadas, como bases de conhecimento, FAQs, documentos empresariais ou manuais t√©cnicos.\n\nApesar de eficaz, a vers√£o tradicional n√£o possui mem√≥ria de longo prazo nem capacidade de agir de forma aut√¥noma ‚Äî ela responde de maneira pontual e reativa, sem aprender com intera√ß√µes anteriores.\n\n* Para testar a automa√ß√£o basta clicar no bot√£o \"Open Chat\" no canto inferior central.",
        "height": 500,
        "width": 680,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1000,
        -400
      ],
      "typeVersion": 1,
      "id": "a8ab4dde-be08-4221-8a42-bbf3aa904f8c",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9a9a245e-f1a1-4282-bb02-a81ffe629f0f",
              "name": "chatInput",
              "value": "={{ $json?.chatInput || $json.body.chatInput }}",
              "type": "string"
            },
            {
              "id": "b80831d8-c653-4203-8706-adedfdb98f77",
              "name": "sessionId",
              "value": "=rag",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6a0e43bf-4950-41f8-ba75-309a3ceb47c3",
      "name": "dados",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        200,
        -240
      ]
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        180,
        100
      ],
      "id": "a6a75e6b-8782-4a25-90b2-38d8fa336c2d",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "1FmPMOoqEzqVaaqy",
          "name": "ALIACODE"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        480,
        100
      ],
      "id": "3e76cc36-d665-4a2e-acf4-3402739f8918",
      "name": "Mem√≥ria Simples"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Habilita a extens√£o pgvector para trabalhar com vetores de embeddings\ncreate extension vector;\n\n-- Cria uma tabela para armazenar seus documentos\ncreate table documents_tcc (\n  id bigserial primary key,\n  content text, -- corresponde a Document.pageContent\n  metadata jsonb, -- corresponde a Document.metadata\n  embedding vector(1536) -- 1536 funciona para embeddings da OpenAI, altere se necess√°rio\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -740,
        1000
      ],
      "id": "0802d678-f611-4312-a83f-1e46cc9b4038",
      "name": "Criar Tabela de Documentos",
      "credentials": {
        "postgres": {
          "id": "tv4Jphow4w7peymi",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Cria uma fun√ß√£o para buscar os documentos mais semelhantes com base no embedding de consulta\ncreate function match_documents_tcc (\n  query_embedding vector(1536),\n  match_count int default null,\n  filter jsonb default '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $$\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    1 - (documents_tcc.embedding <=> query_embedding) as similarity -- calcula a similaridade (quanto menor a dist√¢ncia, maior a similaridade)\n  from documents_tcc\n  where metadata @> filter -- aplica filtro nos metadados, se houver\n  order by documents_tcc.embedding <=> query_embedding -- ordena por similaridade (menor dist√¢ncia primeiro)\n  limit match_count; -- limita a quantidade de resultados retornados\nend;\n$$;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -520,
        1000
      ],
      "id": "842d0970-b7b0-4e9e-a1b7-a688d87ce6e0",
      "name": "Criar Fun√ß√£o de Correspond√™ncia",
      "credentials": {
        "postgres": {
          "id": "tv4Jphow4w7peymi",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Inserir no Vectorstore do Supabase",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Deletar Linhas Antigas do Documento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extrair Texto do PDF",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extrair Texto do Documento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clique para Criar": {
      "main": [
        [
          {
            "node": "Criar Tabela de Documentos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extrair Texto do PDF": {
      "main": [
        [
          {
            "node": "Inserir no Vectorstore do Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extrair Texto do Documento": {
      "main": [
        [
          {
            "node": "Inserir no Vectorstore do Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Divisor de Texto por Caracteres": {
      "ai_textSplitter": [
        [
          {
            "node": "Carregador de Dados Padr√£o",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Carregador de Dados Padr√£o": {
      "ai_document": [
        [
          {
            "node": "Inserir no Vectorstore do Supabase",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Inserir no Vectorstore do Supabase": {
      "main": [
        [
          {
            "node": "Repetir sobre Itens (Loop)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deletar Linhas Antigas do Documento": {
      "main": [
        [
          {
            "node": "Download Arquivo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Repetir sobre Itens (Loop)": {
      "main": [
        [],
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Arquivo": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Arquivo Criado": {
      "main": [
        [
          {
            "node": "Repetir sobre Itens (Loop)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Arquivo Atualizado": {
      "main": [
        [
          {
            "node": "Repetir sobre Itens (Loop)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Mem√≥ria Simples": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Criar Tabela de Documentos": {
      "main": [
        [
          {
            "node": "Criar Fun√ß√£o de Correspond√™ncia",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0882ff88-116e-43ce-bb86-9b4bcbd196b4",
  "meta": {
    "instanceId": "25ef9a3ed4fc03d15a4387f32c0f8a5974fa6937ca794c863d327018ac46906c"
  },
  "id": "RAlD5Lyhq1wLAnHN",
  "tags": [
    {
      "createdAt": "2025-04-08T02:35:57.344Z",
      "updatedAt": "2025-04-08T02:35:57.344Z",
      "id": "Pn2ZiG7dG6arZwxW",
      "name": "TCC"
    }
  ]
}